{"version":3,"sources":["components/Header.js","components/TableDisplay.js","components/InputForms.js","components/Tasks.js","components/Thoughts.js","components/TabsComponent.js","components/Footer.js","components/ToggleColorMode.js","App.js","index.js"],"names":["useStyles","makeStyles","root","width","backgroundColor","theme","createTheme","responsiveFontSizes","Header","classes","Box","className","ThemeProvider","Typography","variant","sx","p","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","onClick","event","disabled","direction","Math","ceil","max","TableDisplay","rowData","type","localStorage","getItem","JSON","parse","React","useState","rows","setRows","length","map","row","isChecked","checked","setChecked","setPage","setRowsPerPage","emptyRows","handleDeleteSingleItem","ev","window","confirm","filter","obj","id","currentTarget","useEffect","setItem","stringify","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","padding","Checkbox","every","item","onChange","forEach","target","align","color","fontSize","TableBody","slice","index","i","textDecorationLine","dateContent","inputTitle","inputDesc","scope","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","styles","display","justifyContent","container","m","flexDirection","alignItems","gap","inputs","InputForms","outputData","setInputTitle","setInputDesc","output","setOutput","moment","dateValue","setDateValue","openAlert","setOpenAlert","handleCloseAlert","name","action","onSubmit","preventDefault","trim","month","date","year","content","Date","now","toString","setTimeout","displayModal","onReset","LocalizationProvider","dateAdapter","DateAdapter","flexWrap","DatePicker","newDateValue","renderInput","params","TextField","helperText","placeholder","FormControl","InputLabel","htmlFor","FilledInput","pt","multiline","minRows","maxRows","Button","fontWeight","Modal","open","onClose","Alert","severity","modalStyle","position","top","left","transform","bgcolor","border","boxShadow","Tasks","setOpen","handleOpen","handleClose","mb","mobile","bottom","right","alignSelf","Thoughts","TabPanel","children","other","role","hidden","TabsComponent","isMobile","useMediaQuery","breakpoints","down","setValue","handleChange","newValue","borderBottom","borderColor","Tabs","textColor","indicatorColor","centered","Tab","borderTop","Footer","ToggleColorMode","colorMode","ColorModeContext","toggleColorMode","palette","mode","createContext","App","setMode","useMemo","prevMode","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3549a11.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Typography, Box, createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: 'background.default',\r\n    }\r\n\r\n}));\r\n\r\nlet theme = createTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n                <Typography variant=\"h3\" sx={{p:2}}>\r\n                    My Coding Journal\r\n                </Typography>\r\n            </ThemeProvider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableFooter, TableRow, TablePagination,\r\n    Paper, Box, Typography, Checkbox, FormControlLabel, useTheme, IconButton\r\n} from '@mui/material';\r\n\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nfunction TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nfunction TableDisplay(props) {\r\n\r\n    let rowData = props.type === \"Task\"\r\n        ? localStorage.getItem('taskData')\r\n            ? JSON.parse(localStorage.getItem('taskData'))\r\n            : []\r\n        : localStorage.getItem('thoughtData')\r\n            ? JSON.parse(localStorage.getItem('thoughtData'))\r\n            : [];\r\n\r\n    let [rows, setRows] = React.useState([...rowData]);\r\n\r\n    const [checked, setChecked] = React.useState(\r\n        rows.length > 0 ? [...rows].map(row => row.isChecked) : [false]\r\n    );\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleAllCheckboxes = (ev) => {\r\n        [...rows].forEach(row => {\r\n            row.isChecked = ev.target.checked;\r\n        })\r\n        setChecked([...checked].map(item => ev.target.checked))\r\n    }\r\n\r\n    const handleDeleteAllItems = (ev) => {\r\n        let conf = window.confirm('This action will delete all items. Continue?');\r\n        if (conf) {\r\n            props.type === \"Task\"\r\n                ? localStorage.setItem('taskData', [])\r\n                : localStorage.setItem('thoughtData', []);\r\n        }\r\n    }\r\n\r\n    const handleDeleteSingleItem = (ev) => {\r\n        let conf = window.confirm('This action will delete this single item. Continue?');\r\n        if (conf) {\r\n            setRows([...rows].filter(obj => obj.id !== ev.currentTarget.id));\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.type === \"Task\") localStorage.setItem(`taskData`, JSON.stringify(rows));\r\n        if (props.type === \"Thought\") localStorage.setItem(`thoughtData`, JSON.stringify(rows));\r\n    }, [rows, props.type]);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table size=\"small\" >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                                checked={[...checked].every(item => item)}\r\n                                onChange={handleAllCheckboxes}\r\n                            />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                                Date\r\n                            </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                                Title\r\n                            </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                                Description\r\n                            </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" >\r\n                            <IconButton variant=\"contained\" color=\"error\" onClick={handleDeleteAllItems}>\r\n                                <DeleteForeverIcon fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(rowsPerPage > 0\r\n                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : rows\r\n                    ).map((row, index) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell padding=\"checkbox\">\r\n                                <Checkbox checked={checked[index]} onChange={(ev) => {\r\n                                    row.isChecked = ev.target.checked;\r\n                                    setChecked([...checked].map((item, i) => {\r\n                                        if (index === i) item = ev.target.checked;\r\n                                        return item;\r\n                                    }));\r\n                                }} />\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Typography variant=\"body1\"\r\n                                    sx={row.isChecked ? { textDecorationLine: 'line-through' } : { textDecorationLine: 'none' }}>\r\n                                    {row.dateContent}\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Typography variant=\"h6\"\r\n                                    sx={row.isChecked ? { textDecorationLine: 'line-through' } : { textDecorationLine: 'none' }}>\r\n                                    {row.inputTitle}\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell align=\"justify\">\r\n                                <Typography variant=\"body2\"\r\n                                    sx={row.isChecked ? { textDecorationLine: 'line-through' } : { textDecorationLine: 'none' }}>\r\n                                    {row.inputDesc}\r\n                                </Typography>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" component=\"th\" scope=\"row\" >\r\n                                <IconButton id={row.id} variant=\"contained\" color=\"error\" onClick={handleDeleteSingleItem} >\r\n                                    <HighlightOffIcon fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    {emptyRows > 0 && (\r\n                        <TableRow style={{ height: 43 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                            colSpan={5}\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: {\r\n                                    'aria-label': 'rows per page',\r\n                                },\r\n                                native: true,\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default TableDisplay;\r\n","import React from 'react'\r\nimport { Box, Typography, FormControl, FilledInput, OutlinedInput, InputLabel, Button, IconButton, Modal, Alert, TextField } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DateAdapter from '@mui/lab/AdapterMoment';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport moment from 'moment';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        m: 2,\r\n        display: 'flex',\r\n        width: '80%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: 2,\r\n    },\r\n    inputs: {\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    inputTitle: {\r\n        width: '100%',\r\n    }\r\n\r\n}\r\n\r\nfunction InputForms(props) {\r\n    let outputData = props.type === \"Task\"\r\n        ? localStorage.getItem('taskData')\r\n            ? JSON.parse(localStorage.getItem('taskData'))\r\n            : []\r\n        : localStorage.getItem('thoughtData')\r\n            ? JSON.parse(localStorage.getItem('thoughtData'))\r\n            : [];\r\n\r\n    const [inputTitle, setInputTitle] = React.useState('');\r\n    const [inputDesc, setInputDesc] = React.useState('');\r\n\r\n    const [output, setOutput] = React.useState(outputData);\r\n\r\n    const [dateValue, setDateValue] = React.useState(new moment());\r\n\r\n    const handleTitle = (ev) => {\r\n        setInputTitle(ev.target.value);\r\n    };\r\n\r\n    const handleDesc = (ev) => {\r\n        setInputDesc(ev.target.value);\r\n    };\r\n\r\n    const [openAlert, setOpenAlert] = React.useState(false);\r\n    const handleOpenAlert = () => {\r\n        setOpenAlert(true);\r\n    };\r\n    const handleCloseAlert = () => {\r\n        setOpenAlert(false);\r\n    };\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        if (inputTitle.trim() !== '' && inputDesc.trim() !== '') {\r\n            let dateContent = `${dateValue.month() + 1}/${dateValue.date()}/${dateValue.year()} `\r\n            let isChecked = false;\r\n            let id = Date.now().toString(23);\r\n            const content = { id, isChecked, dateContent, inputTitle, inputDesc };\r\n            setOutput([...output, content]);\r\n            setInputTitle('');\r\n            setInputDesc('');\r\n            setTimeout(() => props.displayModal(false), 0);\r\n        }\r\n        else {\r\n            handleOpenAlert();\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setInputTitle('');\r\n        setInputDesc('');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.type === \"Task\") localStorage.setItem(`taskData`, JSON.stringify(output));\r\n        if (props.type === \"Thought\") localStorage.setItem(`thoughtData`, JSON.stringify(output));\r\n    }, [output, props.type]);\r\n\r\n    return (\r\n        <form name={props.type} action=\"/\" style={styles.root} onSubmit={handleSubmit} onReset={handleReset}>\r\n            <Box sx={styles.container}>\r\n\r\n                <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <Box sx={{ width: '100%', gap: 2, flexWrap: 'wrap' }} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <DatePicker\r\n                            label=\"Choose Date\"\r\n                            value={dateValue}\r\n                            onChange={(newDateValue) => {\r\n                                setDateValue(newDateValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} helperText={params?.inputProps?.placeholder} />}\r\n                        />\r\n                        <FormControl variant=\"filled\" sx={styles.inputTitle}>\r\n                            <InputLabel htmlFor=\"component-title\">{props.type} Title</InputLabel>\r\n                            <FilledInput id=\"component-title\" value={inputTitle} onChange={handleTitle} sx={{ pt: 0.5, fontSize: '1.75rem', width: '100%', }} />\r\n                        </FormControl>\r\n\r\n                    </Box>\r\n                </LocalizationProvider>\r\n\r\n                <FormControl variant=\"filled\" sx={styles.inputs}>\r\n                    <InputLabel htmlFor=\"component-desc\">{props.type} Description</InputLabel>\r\n                    <FilledInput id=\"component-desc\" value={inputDesc} onChange={handleDesc} multiline minRows={5} maxRows={8} sx={{ pt: 3.5, fontSize: '1.15rem' }} />\r\n                </FormControl>\r\n\r\n                <Box sx={{ width: '100%', gap: 5 }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"success\">\r\n                        <Typography variant=\"button\" fontWeight=\"bold\">Submit</Typography>\r\n                    </Button>\r\n                    <Button type=\"reset\" variant=\"contained\" color=\"error\">\r\n                        <Typography variant=\"button\" fontWeight=\"bold\">Reset</Typography>\r\n                    </Button>\r\n                </Box>\r\n\r\n                <Modal open={openAlert} onClose={handleCloseAlert}>\r\n                    <Box sx={{ width: '100%', height: '100%' }}\r\n                        display='flex'\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\">\r\n                        <Alert severity=\"warning\" sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            Please write Title and Description for {props.type}s.\r\n                            <IconButton variant=\"contained\" color=\"warning\" onClick={handleCloseAlert}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Alert>\r\n                    </Box>\r\n                </Modal>\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputForms\r\n","import * as React from 'react'\r\nimport { Typography, Box, IconButton, Modal, ThemeProvider, useTheme } from '@mui/material';\r\n\r\nimport TableDisplay from './TableDisplay';\r\n\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport InputForms from './InputForms';\r\n\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 2,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nfunction Tasks(props) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <Box sx={{ height: '80vh', p: 0, mb:5}}>\r\n            <ThemeProvider theme={theme}>\r\n                {props.mobile\r\n                    ?\r\n\r\n                    <IconButton sx={{ position: 'absolute', bottom: '3%', right: '2.5%', fontSize: 'clamp(1rem, 7.5vmax, 100px)' }} variant=\"contained\" color=\"secondary\" aria-label=\"Add Task\" onClick={handleOpen}>\r\n                        <AddCircleIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n\r\n                    :\r\n\r\n                    <IconButton sx={{ position: 'absolute', top: '3%', left: '3%', fontSize: 'clamp(1rem, 3.5vmax, 100px)' }} variant=\"contained\" color=\"secondary\" aria-label=\"Add Task\" onClick={handleOpen}>\r\n                        <AddCircleIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <Box sx={modalStyle}>\r\n                        <IconButton sx={{alignSelf: 'flex-end', fontSize: 'clamp(1.5rem, 2.5vmax, 100px)' }} variant=\"contained\" color=\"error\" aria-label=\"Add Task\" onClick={handleClose}>\r\n                            <CancelIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        <Typography variant=\"h5\" fontWeight='bold' color=\"text.primary\" align=\"center\">\r\n                            Add New Task\r\n                        </Typography>\r\n                        <InputForms type=\"Task\" displayModal={setOpen} />\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <TableDisplay type=\"Task\" />\r\n            </ThemeProvider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { Typography, Box, IconButton, Modal, ThemeProvider, useTheme } from '@mui/material';\r\n\r\nimport InputForms from './InputForms';\r\nimport TableDisplay from './TableDisplay';\r\n\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    border: '2px solid #000',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 2,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nfunction Thoughts(props) {\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <Box sx={{ height: '80vh', p: 0 , mb:5}}>\r\n            <ThemeProvider theme={theme}>\r\n                {props.mobile\r\n                    ?\r\n\r\n                    <IconButton sx={{ position: 'absolute', bottom: '3%', right: '2.5%', fontSize: 'clamp(1rem, 7.5vmax, 100px)' }} variant=\"contained\" color=\"secondary\" aria-label=\"Add Task\" onClick={handleOpen}>\r\n                        <AddCircleIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n\r\n                    :\r\n\r\n                    <IconButton sx={{ position: 'absolute', top: '3%', left: '3%', fontSize: 'clamp(1rem, 3.5vmax, 100px)' }} variant=\"contained\" color=\"secondary\" aria-label=\"Add Task\" onClick={handleOpen}>\r\n                        <AddCircleIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n\r\n\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <Box sx={modalStyle}>\r\n                        <IconButton sx={{ alignSelf: 'flex-end', fontSize: 'clamp(1.5rem, 2.5vmax, 100px)' }} variant=\"contained\" color=\"error\" aria-label=\"Add Task\" onClick={handleClose}>\r\n                            <CancelIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        <Typography variant=\"h5\" fontWeight='bold' color=\"text.primary\" align=\"center\">\r\n                            Add New Thought\r\n                        </Typography>\r\n                        <InputForms type=\"Thought\" displayModal={setOpen} />\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <TableDisplay type=\"Thought\" />\r\n            </ThemeProvider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Thoughts\r\n","import React from 'react'\r\nimport { Typography, Tabs, Tab, Box, useMediaQuery } from '@mui/material';\r\nimport Tasks from './Tasks';\r\nimport Thoughts from './Thoughts';\r\nimport { useTheme } from '@mui/material';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ padding: '10px 0px' }}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction TabsComponent() {\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (ev, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '99%', }}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                {isMobile ?\r\n\r\n                    <Tabs value={value} onChange={handleChange} textColor=\"secondary\" indicatorColor=\"secondary\" centered>\r\n                        <Tab label={<Typography variant=\"h6\">Tasks</Typography>} />\r\n                        <Tab label={<Typography variant=\"h6\">Thoughts of the Day</Typography>} />\r\n                    </Tabs>\r\n\r\n                    :\r\n\r\n                    <Tabs value={value} onChange={handleChange} textColor=\"secondary\" indicatorColor=\"secondary\" variant=\"fullWidth\">\r\n                        <Tab label={<Typography variant=\"h6\">Tasks</Typography>} />\r\n                        <Tab label={<Typography variant=\"h6\">Thoughts of the Day</Typography>} />\r\n                    </Tabs>\r\n                }\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <Tasks mobile={isMobile} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Thoughts mobile={isMobile} />\r\n            </TabPanel>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TabsComponent;\r\n","import React from 'react'\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nconst style = {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    bgcolor: 'background.default',\r\n    borderTop: 1,\r\n    borderColor: 'divider',\r\n}\r\n\r\nfunction Footer() {\r\n    return (\r\n        <Box sx={style}>\r\n            <Typography variant=\"subtitle2\">\r\n                Created and Designed by Ryan Gerome Regis &copy; 2021\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import * as React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { ColorModeContext } from '../App';\r\nimport Header from './Header';\r\nimport TabsComponent from './TabsComponent';\r\nimport Footer from './Footer';\r\n\r\nfunction ToggleColorMode() {\r\n    const theme = useTheme();\r\n    const colorMode = React.useContext(ColorModeContext);\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex',\r\n            width: '100%',\r\n            height: '110vh',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            bgcolor: 'background.default',\r\n            color: 'text.primary',\r\n            p: 0,\r\n        }}>\r\n            <Header />\r\n            <Box sx={{position: 'absolute', top:0 , right:0}}>\r\n                <IconButton onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n                    {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n                </IconButton>\r\n            </Box>\r\n            <TabsComponent />\r\n            <Footer />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ToggleColorMode;\r\n","import './App.css';\nimport React from 'react';\nimport { ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport ToggleColorMode from './components/ToggleColorMode';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n\nfunction App() {\n\n  const [mode, setMode] = React.useState('dark');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <div className=\"App\">\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <ToggleColorMode />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </div>\n  );\n}\nexport { ColorModeContext };\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}